<?php

namespace Tokimikichika\AbstractFactory\Component\Email;

use Tokimikichika\AbstractFactory\Interface\MessageInterface;

/**
 * Email-—Å–æ–æ–±—â–µ–Ω–∏–µ
 */
class EmailMessage implements MessageInterface
{
    private string $content = '';
    private string $recipient = '';
    private string $subject = '';
    /** @var array<string, string> */
    private array $headers = [
        'Content-Type' => 'text/html; charset=UTF-8',
        'From' => 'noreply@example.com',
    ];

    /**
     * –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
     * @return bool –†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏
     */
    public function send(): bool
    {
        // –°–∏–º—É–ª—è—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ email
        echo "üìß –û—Ç–ø—Ä–∞–≤–∫–∞ Email:\n";
        echo "   –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {$this->recipient}\n";
        echo "   –¢–µ–º–∞: {$this->subject}\n";
        echo "   –°–æ–¥–µ—Ä–∂–∏–º–æ–µ: {$this->content}\n";
        echo "   Headers: " . json_encode($this->headers) . "\n\n";

        return true; // –°–∏–º—É–ª—è—Ü–∏—è —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏—è
     * @return string –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏—è
     */
    public function getContent(): string
    {
        return $this->content;
    }

    /**
     * –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏—è
     * @param string $content –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏—è
     */
    public function setContent(string $content): void
    {
        $this->content = $content;
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –ø–æ–ª—É—á–∞—Ç–µ–ª—è
     * @return string –ü–æ–ª—É—á–∞—Ç–µ–ª—å
     */
    public function getRecipient(): string
    {
        return $this->recipient;
    }

    /**
     * –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–ª—É—á–∞—Ç–µ–ª—è
     * @param string $recipient –ü–æ–ª—É—á–∞—Ç–µ–ª—å
     */
    public function setRecipient(string $recipient): void
    {
        $this->recipient = $recipient;
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–º—É —Å–æ–æ–±—â–µ–Ω–∏—è
     * @return string –¢–µ–º–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
     */
    public function getSubject(): string
    {
        return $this->subject;
    }

    /**
     * –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ–º—É —Å–æ–æ–±—â–µ–Ω–∏—è
     * @param string $subject –¢–µ–º–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
     */
    public function setSubject(string $subject): void
    {
        $this->subject = $subject;
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –∑–∞–≥–æ–ª–æ–≤–∫–∏ email
     * @return array<string, string> –ó–∞–≥–æ–ª–æ–≤–∫–∏ email
     */
    public function getHeaders(): array
    {
        return $this->headers;
    }

    /**
     * –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≥–æ–ª–æ–≤–∫–∏ email
     * @param array<string, string> $headers –ó–∞–≥–æ–ª–æ–≤–∫–∏ email
     */
    public function setHeaders(array $headers): void
    {
        $this->headers = array_merge($this->headers, $headers);
    }
}
